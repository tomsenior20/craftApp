name: 'Ticket Solution CI/CD'

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.20.5'
          
      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install npm dependencies
        run: |
          npm install next react react-dom sqlite3 --save-dev typescript --save-dev @types/react @types/react-dom express cors helmet jest @testing-library/react @testing-library/jest-dom jest-environment-jsdom dev identity-obj-proxy jest-transform-stub
          
      - name: Install Docker Compose 
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install npm dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm test

      - name: Run NPM TEST Coverage
        run: npm test -- --coverage

  audit:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Check for Vulnerabilities
        run: npm audit

      - name: Fix vulnerabilities
        run: npm audit fix

  build:
    needs: [audit, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install npm dependencies
        run: npm install

      - name: Build project
        run: npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construct Docker Image
        run: |
          docker build --no-cache -t tomsenior98/craftapp:latest -t tomsenior98/craftapp:${{ github.sha }} .

      - name: Install Docker Compose Plugin
        run: |
          mkdir -p ~/.docker/cli-plugins/
          curl -SL https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose

      - name: Run Docker Compose
        run: |
          docker compose --version
          docker compose up --build -d

      - name: Push Docker Image
        run: |
          docker push tomsenior98/craftapp:latest
          docker push tomsenior98/craftapp:${{ github.sha }}
