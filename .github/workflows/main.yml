name: 'Ticket Solution CI/CD'

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    # Steps for setup
    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3
      # Configure Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.17.1'
       # Install npm dependencies
      - name: Install npm dependencies
        run: |
          npm install next react react-dom sqlite3 --save-dev typescript --save-dev @types/react @types/react-dom express cors helmet 

  test:
    runs-on: ubuntu-latest
    needs: setup
    # Steps for test
    steps:
      # Check out the repository again in the build job
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install npm dependencies
        run: npm install
      # Run Unit Tests
      - name: Run Unit Tests
        run: npm test

  audit:
    runs-on: ubuntu-latest
    needs: setup
    # Steps for test
    steps:
      # Check out the repository again in the build job
      - name: Checkout repository
        uses: actions/checkout@v3
       # Check for vulnerabilities
      - name: Check for Vulnerabilities
        run: npm audit
      # Run Audit fix for the vulnerabilities.
      - name: Fix vulnerabilities
        run: npm audit fix

  build:
    needs: [audit, test]
    runs-on: ubuntu-latest
    steps:
      # Check out the repository again in the deploy job
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install npm dependencies
        run: npm install
      # Build the project
      - name: Build project
        run: npm run build
        working-directory: ./

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Check out the repository again in the deploy job
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose 
        run: npm install docker-compose

      - name: Log into Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 

      # Build Docker Image
      # - name: Construct Docker Image
      #   # run: docker build --no-cache -t craftapp:latest -f Dockerfile .
      #   run: |
      #     docker build -t tomsenior98/craftapp:latest -t tomsenior98/craftapp:${{ github.sha }} .

      - name: Run Docker Compose
        run: docker-compose up --build -d

      # Push Docker Image
      - name: Push Docker Image
        run: | 
            docker push tomsenior98/craftapp:latest
            docker push tomsenior98/craftapp:${{ github.sha }}
        